@page "/reporter"

@inject NavigationManager _navigationManager

<EditForm Model="matchUpdate" OnValidSubmit="@(e=> SendUpdate())">
    <DataAnnotationsValidator/>
    <div class="form-group">
        <label>de update</label>
        <InputText id="update" class="form-control" @bind-Value="matchUpdate.UpdateMessage"/>
        <ValidationMessage For="@(()=>matchUpdate.UpdateMessage)"/>
    </div>
    <button type="submit" class="btn btn-primary">Opslaan</button>
</EditForm>

@code{

    private HubConnection hubConnection;
    private MatchUpdate matchUpdate = new();

    protected override async Task OnInitializedAsync()
    {
        hubConnection = new HubConnectionBuilder()
                        .WithUrl(_navigationManager.ToAbsoluteUri(Constants.MatchHubUrl))
                        .Build();

        await hubConnection.StartAsync();

        await base.OnInitializedAsync();
    }

    private async Task SendUpdate()
    {
        matchUpdate.Time = DateTime.Now;
        await hubConnection.SendAsync("SendUpdate", matchUpdate);
        matchUpdate.UpdateMessage = string.Empty;
    }
}