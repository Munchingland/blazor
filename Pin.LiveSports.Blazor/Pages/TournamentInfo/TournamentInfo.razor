@page "/tournament/{Id:int}"
@using Pin.LiveSports.Core;
@using Pin.LiveSports.Blazor.Components;
@inject ITournamentService _tournamentService
@inject NavigationManager _navigationManager
@inject IMatchService _matchService

<TournamentCompetitorList ChosenTournament="ChosenTournament"/>

<MatchHistoryItem TournamentHistory="matchHistory"/>


@code {
    [Parameter]
    public int Id { get; set; }

    private List<MatchUpdate> matchHistory = new List<MatchUpdate>();
    public Tournament ChosenTournament { get; set; }
    private HubConnection hubConnection;

    protected override async Task OnInitializedAsync()
    {
        hubConnection = new HubConnectionBuilder()
                       .WithUrl(_navigationManager.ToAbsoluteUri(Constants.MatchHubUrl))
                       .Build();

        hubConnection.On<int>("matchUpdate", (update) =>
        {
            if(Id== update)
            {
                matchHistory = _tournamentService.GetTournamentHistory(update);
            }
            StateHasChanged();
        });

        ChosenTournament = _tournamentService.GetById(Id);
        matchHistory = _tournamentService.GetTournamentHistory(Id);
        await hubConnection.StartAsync();
        await base.OnInitializedAsync();
    }
}
