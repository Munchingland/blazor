<EditForm Model="MatchUpdate" OnValidSubmit="@(e => SubmitTournamentUpdate.InvokeAsync(MatchUpdate))">
    <DataAnnotationsValidator />

    <div class="form-group">
        <label for="styleFluidity">Stijl en vloeibaarheid:</label>
        <select id="styleFluidity" class="form-control" @bind="MatchUpdate.PointGain.StyleAndFluidity">
            @foreach (var score in ScoresToGive)
            {
                <option value="@score">@score</option>
            }
        </select>
    </div>

    <div class="form-group">
        <label for="varietyTricks">Verscheidenheid in trucs:</label>
        <select id="varietyTricks" class="form-control" @bind="MatchUpdate.PointGain.VarietyOfTricks">
            @foreach (var score in ScoresToGive)
            {
                <option value="@score">@score</option>
            }
        </select>
    </div>

    <div class="form-group">
        <label for="difficultyManeuvers">Moeilijkheid van mannuever:</label>
        <select id="difficultyManeuvers" class="form-control" @bind="MatchUpdate.PointGain.DifficultyOfManuevers">
            @foreach (var score in ScoresToGive)
            {
                <option value="@score">@score</option>
            }
        </select>
    </div>

    <div class="form-group">
        <label for="heightAirTime">Hoogte en lucht tijd:</label>
        <select id="heightAirTime" class="form-control" @bind="MatchUpdate.PointGain.HeightAndAirTime">
            @foreach (var score in ScoresToGive)
            {
                <option value="@score">@score</option>
            }
        </select>
    </div>

    <div class="form-group">
        <label for="innovationCreativity">Innovatie en creativiteit:</label>
        <select id="innovationCreativity" class="form-control" @bind="MatchUpdate.PointGain.InnovationAndCreativity">
            @foreach (var score in ScoresToGive)
            {
                <option value="@score">@score</option>
            }
        </select>
    </div>

    <div class="form-group">
        <label for="updateMessage">@SelectedCompetitor.Surfer.Name routine Update:</label>
        <textarea id="updateMessage" class="form-control form-control-lg" @bind="MatchUpdate.UpdateMessage"></textarea>
        <ValidationMessage For="@(() => MatchUpdate.UpdateMessage)" />
    </div>


    <button type="submit" class="btn btn-primary">Stuur update door</button>
</EditForm>


@code {
    [Parameter]
    public MatchUpdate MatchUpdate { get; set; }

    [Parameter]
    public Competitor SelectedCompetitor { get; set; }

    [Parameter]
    public EventCallback<MatchUpdate> SubmitTournamentUpdate { get; set; }

    [Parameter]
    public List<int?> ScoresToGive { get; set; }
}
